generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String              @id @default(uuid())
  email                String?             @unique
  password             String
  Balance              Balance[]
  OnRampTransaction    OnRampTransaction[]
  debitedTransactions  p2pTransfer[]       @relation(name: "sendersUser")
  creditedTransactions p2pTransfer[]       @relation(name: "recieversUser")
}

model p2pTransfer {
  id              String          @id @default(uuid())
  amount          Int
  timestamp       DateTime
  sendersUserId   String
  transactionType TransactionType
  sendersUser     User            @relation(name: "sendersUser", fields: [sendersUserId], references: [id])
  recieversUserId String
  recieversUser   User            @relation(name: "recieversUser", fields: [recieversUserId], references: [id])
}

model Merchant {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  auth_type AuthType
}

model OnRampTransaction {
  id              String          @id @default(uuid())
  status          OnRampStatus
  token           String?         @unique
  provider        String?
  amount          Int
  transactionType TransactionType
  startTime       DateTime
  userId          String
  user            User            @relation(fields: [userId], references: [id])
}

model Balance {
  id     String @id @default(uuid())
  amount Int
  userId String @unique
  User   User   @relation(fields: [userId], references: [id])
  locked Int
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Success
  Failure
  Processing
}

enum TransactionType {
  Credit
  Debit
}
